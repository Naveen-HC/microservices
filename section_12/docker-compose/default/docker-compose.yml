services:
  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    extends:
      file: common-config.yml
      service: network-config

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_LOGLEVEL: INFO
      ROOT_LOGLEVEL: INFO
    ports:
      - "7080:8080"
    command:
      - start-dev
    extends:
      file: common-config.yml
      service: network-config

  configserver:
    image: "hcnaveen/configserver:s12"
    container_name: "configserver-ms"
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    extends:
      file: common-config.yml
      service: network-deploy-config
    environment:
      OTEL_SERVICE_NAME: "configserver"

  eurekaserver:
    image: "hcnaveen/eurekaserver:s12"
    container_name: "eurekaserver-ms"
    ports:
      - 8060:8060
    healthcheck:
      test: "curl --fail --silent localhost:8060/actuator/health/readiness | grep UP || exit 1"
      start_period: 10s
      retries: 20
      interval: 20s
      timeout: 10s
    depends_on:
      configserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"
      OTEL_SERVICE_NAME: "eurekaserver"
    extends:
      file: common-config.yml
      service: network-deploy-env-config

  accounts:
    image: "hcnaveen/accounts:s12"
    container_name: accounts-ms
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      OTEL_SERVICE_NAME: "accounts"
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: "kafka:9092"
    extends:
      file: common-config.yml
      service: app-config

  message:
    image: hcnaveen/message:s12
    container_name: message-ms
    environment:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: "kafka:9092"
    extends:
      file: common-config.yml
      service: network-config

  gatewayserver:
    image: "hcnaveen/gatewayserver:s12"
    container_name: "gatewayserver-ms"
    ports:
      - 8050:8050
    healthcheck:
      test: "curl --fail --silent localhost:8050/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    depends_on:
      accounts:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      OTEL_SERVICE_NAME: "gatewayserver"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: "http://keycloak:8080/realms/master/protocol/openid-connect/certs"
    extends:
      file: common-config.yml
      service: app-config

networks:
  naviBank:
    driver: "bridge"

volumes:
  kafka_data:
    driver: local